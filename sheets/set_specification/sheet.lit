<!--
!name:set_specification
!need:set_equality
-->

§ Why ⦉
¶ ⦊
  ‖ We want to construct new sets out of old ones. ⦉

  ‖ So, can we always construct subsets? ⦉
⦉

§ Definition ⦉
¶ ⦊
  ‖ We will say that we can. ⦉

  ‖ More specifically, if we have a set and some statement
    which may be true or false for the elements of that set, a
    set exists containing all and only the elements for which
    the statement is true. ⦉
⦉

¶ ⦊
  ‖ Roughly speaking, the principle is like this. ⦉

  ‖ We have a set which contains some objects. ⦉

  ‖ Suppose the set of playing cards in a usual deck exists. ⦉

  ‖ We are taking as a principle that the set of all fives
    exists, so does the set of all fours, as does the set of
    all hearts, and the set of all face cards. ⦉

  ‖ Roughly, the corresponding statements are “it is a five”,
    “it is a four”, “it is a heart”, and “it is a face card”. ⦉
⦉

<statement type='principle' text='Specification'>
  ‖ For any statement and any set, there is a subset whose
    elements satisfy the statement. ⦉
</statement>
¶ ⦊
  ‖ We call this the ❬principle of specification❭. ⦉

  ‖ We call the second set (obtained from the first) the set
    obtained by ❬specifying❭ elements according to the sentence. ⦉

  ‖ The principle of extension (see \sheetref{set_equality}{Set
    Equality}) says that this set is unique. ⦉

  ‖ All our basic principles about sets (other than the
    principle of extension, see \sheetref{set_equality}{Set
    Equality}) assert that we can construct new sets out of old
    ones in reasonable ways. ⦉
⦉

<!--
<div data-littype='paragraph'>
  <div data-littype='run'> ❲% The basic principles of set theory other than the axiom of extension allow us to construct new sets out of existing ones.❳ </div>

  <div data-littype='run'> ❲% The fir❳ </div>

  <div data-littype='run'> ❲% The basis principles of set theory— the axiom of extension, allow us to❳ </div>

  <div data-littype='run'> ❲% We assert that to every set and every sentence predicated of elements of the set there exists a second set (a subset of the first) whose elements satisfy the sentence.❳ </div>

  <div data-littype='run'> ❲% It is an consequence of the axiom of extension that this set is unique.❳ </div>
</div>
-->

§§ Notation ⦉
¶ ⦊
  ‖ Let $A$ denote a set. ⦉

  ‖ Let $s$ denote a statement in which the symbol $x$ and $A$
    appear unbound. ⦉

  ‖ We assert that there is a set, denote it by $B$, for
    which belonging is equivalent to membership in $A$ and
    satisfaction of $s$. ⦉

  ‖ In other words,
    ◇ ⦊
      ‖ (∀ x)((x ∈ B) \iff ((x ∈ A) ∧ s(x))). ⦉
    ⦉

    ‖ We denote $B$ by $\Set*{x ∈ A}{s(x)}$. ⦉

    ‖ We read the symbol $\mid$ aloud as “such that.” ⦉

    ‖ We read the whole notation aloud as “a in A such that...” ⦉

    ‖ We call it ❬set-builder notation❭. ⦉⦉
⦉

<!--
  For example:

  \begin{account}[Example Specification]

  \name{$A$,$y$}

\thus{set_specification:asdf:asdf}{$(∃ A’)((x ∈ A’) \iff (x \ne y)))$}{Axiom:Specification}

  \end{account}
  -->

<!--
<div data-littype='paragraph'>
  <div data-littype='run'> </div>

  <div data-littype='run'> ❲%Consider the statement $x \not∈ x$.❳ </div>

  <div data-littype='run'> ❲%Let $A$ denote a set.❳ </div>

  <div data-littype='run'> ❲%And define $A’$ by specifying the elements denoted by $x$ which satisfy $x \not∈ x$.❳ </div>

  <div data-littype='run'> ❲%Then $A’ \not∈ A$.❳ </div>

  <div data-littype='run'> ❲%Since $x ∈ A’$ is equivalent to $x \not∈ x$❳ </div>

  <div data-littype='run'> ❲%If $A’ ∈ A$, then $A’ \not∈ A$.❳ </div>
</div>

<div data-littype='paragraph'>
  <div data-littype='run'> ❲% Set-builder notation avoids enumerating❳ </div>

  <div data-littype='run'> ❲% elements.❳ </div>

  <div data-littype='run'> ❲% This notation is really indispensable for❳ </div>

  <div data-littype='run'> ❲% sets which have many members, too many❳ </div>

  <div data-littype='run'> ❲% to reasonably write down.❳ </div>
</div>
-->

§ Nothing contains everything ⦉
¶ ⦊
  ‖ As an example of the principle of specification and an
    important consequence, consider the statement $x ∉ x$. ⦉

  ‖ Using this statement and the principle of specification, we
    can prove that there is no set which contains every other
    set. ⦉
⦉

<!--
  TODO(next edition): explain this more.
                      -->
<statement type='proposition'>
  ‖ No set contains all sets.
    † ⦊
      ‖ We might call such a set, if we admitted its existence,
        a ❬universe of discourse❭ or ❬universal set❭. ⦉

      ‖ With the principle of specification, a “principle of a
        universal set” would give a contradiction (called
        ❬Russell’s paradox❭). ⦉
    ⦉⦉
  <proof>
    ‖ Suppose there exists a set, denote it $A$ which contains
      all sets. ⦉

    ‖ In other words, suppose $(∃ A)(∀ x)(x ∈ A)$. ⦉

    ‖ Use the principle of specification to construct $B =
      \Set{x ∈ A}{x ∉ x}$. ⦉

    ‖ So $(∀ x)(x ∈ B \iff (x ∈ A ∧ x ∉ x))$ ⦉

    ‖ In particular, $(B ∈ B \iff (B ∈ A ∧ B ∉ B))$. ⦉

    ‖ So $B ∉ A$. ⦉

    <!--

  <div data-littype='run'> ❲% \begin{blankaccount}❳ </div>

  <div data-littype='run'> ❲%   \namee{$A$}{$B := \Set{x ∈ A}{x \not∈ x}$}❳ </div>

  <div data-littype='run'> ❲%   \have{set_specification:noU:membership}{$(B ∈ B) \iff ((B ∈ A) ∧ B \not∈ B)$}❳ </div>

  <div data-littype='run'> ❲%   \thus{set_specification:noU:conclusion}{$B \notin A$}{\ref{set_specification:noU:membership}}❳ </div>

  <div data-littype='run'> ❲% \end{blankaccount}❳ </div>
  -->
  </proof>
</statement>

<!--
<div data-littype='paragraph'>
  <div data-littype='run'> ❲% In other words, nothing contains everything.❳ </div>
</div>
-->

<!--
<div data-littype='paragraph'>
  <div data-littype='run'> </div>

  <div data-littype='run'> ❲%TODO(next edition) bring back example? split out universe?❳ </div>

  <div data-littype='run'> ❲%\ssection{Example}❳ </div>

  <div data-littype='run'> ❲%❳ </div>

  <div data-littype='run'> ❲%For example, let $a, b, c, d$❳ </div>

  <div data-littype='run'> ❲%be distinct objects.❳ </div>

  <div data-littype='run'> ❲%Let $A = \set{a, b, c, d}$.❳ </div>

  <div data-littype='run'> ❲%Then❳ </div>

  <div data-littype='run'> ❲%$\Set*{x ∈ A}{x ≠ a}$❳ </div>

  <div data-littype='run'> ❲%is the set $\set{b, c, d}$❳ </div>

  <div data-littype='run'> ❲%❳ </div>

  <div data-littype='run'> ❲%Now let $B$ be an arbitrary❳ </div>

  <div data-littype='run'> ❲%set.❳ </div>

  <div data-littype='run'> ❲%The set $\Set*{b ∈ B}{b ≠ b”$❳ </div>

  <div data-littype='run'> ❲%specifies the empty set.❳ </div>

  <div data-littype='run'> ❲%Since the statement $b ≠ b$ is❳ </div>

  <div data-littype='run'> ❲%false for all objects $b$.❳ </div>
</div>
-->

<!--
  !TODO: russel’s paradox? p 6 of halmos
-->
