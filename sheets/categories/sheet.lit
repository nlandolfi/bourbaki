<!--yaml
name: categories
needs:
    - functions
-->

§ Why ⦉
¶ ⦊
  ‖ We generalize the notion of sets and functions. ⦉
⦉

§ Definition ⦉
¶ ⦊
  ‖ A ❬category❭ is a set of objects together with a set of
    ❬maps❭ (or ❬category maps❭) for each ordered pair of objects. ⦉

  ‖ The set of maps has a binary operation called ❬composition❭
    (or ❬category composition❭), whose induced algebra is
    associative and contains identities. ⦉
⦉

¶ ⦊
  ‖ The basic example is the ❬category of sets❭. ⦉

  ‖ The sets are the objects of the category. ⦉

  ‖ The functions are the maps. ⦉

  ‖ The rule of composition is ordinary function composition. ⦉

  ‖ The map identities are the identity functions. ⦉
⦉

§§ Notation ⦉
¶ ⦊
  ‖ Our notation for categories is guided by our generalizing
    the notions of set and functions. ⦉
⦉

¶ ⦊
  ‖ We denote categories with upper-case latin letters in script;
    for example, $𝒞$. ⦉

  ‖ Upper case latin letters remind that the category is a set
    of objects. ⦉

  ‖ The script form reminds that these objects may themselves be
    sets. ⦉
⦉

¶ ⦊
  ‖ We denote the objects of a category by upper-case latin
    letters, for example $A, B, C$; an allusion to the idea
    that these generalize sets. ⦉

  ‖ We denote the set of maps for an ordered pair of objects
    $(A, B)$ by $A → B$; an allusion to the function notation. ⦉

  ‖ We denote members of $A → B$ using lower case latin
    letters, for example $f, g, h$; an allusion to our function
    notation. ⦉
⦉
