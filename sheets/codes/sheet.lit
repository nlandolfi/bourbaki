<!--yaml
name: codes
needs:
    - dot-dash_code
refs:
    - david_huffman∕a_method_for_the_construction_of_minimum_redundancy_codes
-->

§ Why ⦉
¶ ⦊
  ‖ Can we generalize the idea of flash codes.
    † ⦊
      ‖ The reliance of this sheet on␣
        <a href='/sheets/flash_codes.html'>
          ‖ Flash Codes ⦉
        </a>
        and
        <a href='/sheets/dot-dash_codes.html'>
          ‖ Dot-Dash Codes ⦉
        </a>
        is for this justification, and not for any of the terms
        presented. ⦉
    ⦉⦉
⦉

§ Definition ⦉
¶ ⦊
  ‖ Let $X$ be a set and $A$ be an alphabet set. ⦉

  ‖ We denote the set of all finite sequences (strings) in $A$
    by $\str(A)$. ⦉

  ‖ We read $\str(A)$ aloud as “the strings in $A$.” ⦉

  ‖ The length zero string is $∅$. ⦉
⦉

¶ ⦊
  ‖ A ❬code❭ for $X$ ❬in❭ $A$ is a function from $X$ to
    $\str(A)$. ⦉

  ‖ In this context, we refer to the finite set $A$ as an
    ❬alphabet❭ and we call $c(x)$ the ❬codeword❭ of $x$. ⦉

  ‖ The ❬length❭ of $x ∈ X$, with respect to a code $c: X →
    \str(A)$, is the length of the sequence $c(x)$ (its codeword). ⦉

  ‖ We call a code ❬nonsingular❭ if it is injective. ⦉
⦉

§§ Examples ⦉
¶ ⦊
  ‖ Define $c: \set{α, β} → \set{0, 1}$ by $c(α) = (0,)$ and
    $c(β) = (1,)$.
    † ⦊
      ‖ Future editions will include additional examples. ⦉
    ⦉⦉
⦉

§ Code extensions ⦉
¶ ⦊
  ‖ ⦉

  ‖ Let $s,t ∈ \str(A)$ of length $m$ and $n$ respectively. ⦉

  ‖ The ❬concatenation❭ of $s$ with $t$ is the length $m+n$
    string $u ∈ \str(A)$ defined by $u_{1} = s_1, …, u_m =
    s_m$ and $u_{m+1} = t_1, …, u_{m+n} = t_n$. ⦉

  ‖ We denote the concatenation of $s$ and $t$ by $st$. ⦉

  ‖ Note, however, that $st ≠ ts$, although $s(tr) = (st)r$. ⦉
⦉

¶ ⦊
  ‖ Given a code $c: X → \str(A)$, we can produce a code for
    $\str(X)$ in a natural way. ⦉

  ‖ The ❬extension❭ of $c$ is the function $C: \str(X) →
    \str(A)$ defined, for $ξ = (ξ_1, …, ξ_n) ∈ \str(X)$, by
    ◇ ⦊
      ‖ C(ξ) = c(ξ_1) ⋯ c(ξ_n). ⦉
    ⦉⦉

  ‖ We call an code ❬uniquely decodable❭ if its extension is
    injective. ⦉

  ‖ In other words, given the code $C(ξ)$ for a sequence $ξ ∈
    \str(X)$, we can recover $ξ$. ⦉

  ‖ We call $C(ξ)$ the ❬encoding❭ of $ξ$. ⦉

  ‖ We call $ξ$ the ❬decoding❭ of $C(ξ)$. ⦉
⦉