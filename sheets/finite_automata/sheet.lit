<!--
!name:finite_automata
!refs:sipser
!need:alphabets
-->

§ Definition ⦉
¶ ⦊
  ‖ A ❬finite automaton❭ (or ❬machine❭, ❬deterministic finite
    automaton❭) $M = (Q, Σ, δ, q_0, F)$ is a list where $Q$
    and $Σ$ is are finite sets (alphabets), $δ: Q × Σ → Q$,
    $q_0 ∈ Q$ and $F ⊂ Q$. ⦉
⦉

¶ ⦊
  ‖ We call $Q$ the ❬states❭, $Σ$ the ❬alphabet❭, $δ$ the
    ❬transition function❭, $q_0$ the ❬start state❭ (❬initial
    state❭), and $F$ the ❬accept states❭ (or ❬final states❭). ⦉

  ‖ An input $u ∈ \str(Σ)$ results in a state sequence $x ∈
    \str(Q)$ with $x_1 = q_0$ and $x_{i+1} = δ(x_i, u_i)$ for
    $i = 1, …, \num{u}$. ⦉

  ‖ $M$ ❬accepts❭ $x$ if $x_{\num{x}+1} ∈ F$. ⦉

  ‖ The set of all strings that $M$ accepts is the ❬language❭
    of the machine $M$. ⦉

  ‖ We say that $M$ ❬recognizes❭ or ❬accepts❭ this set. ⦉

  ‖ Although a language may accept many different strings, it
    only ever accepts one language. ⦉

  ‖ For example, if the machine accepts no strings, then it
    accepts the language $∅$. ⦉
⦉

¶ ⦊
  ‖ A $L ⊂ \str(Σ)$ is called ❬regular❭ if there exists a
    finite automaton that recognizes it. ⦉
⦉

§§ Example ⦉
¶ ⦊
  ‖ Define $Q = \set{q_1, q_2, q_3}$, $Σ = \set{0, 1}$, define
    $δ: Q × Σ → Q$ by $δ(q$ ⦉
⦉

<tex>
  ‖ \blankpage ⦉
</tex>
